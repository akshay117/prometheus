pipeline {
    agent {
    docker {
      image 'akshay117711/docker_arm_agent_jdk17'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' //This just mounts Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
         // We have given this in jenkins so commenting out --> git branch: 'main', url: 'https://github.com/akshay117/prometheus.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://144.24.115.153:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "akshay117711/prometheus:${BUILD_NUMBER}"
       // REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
         script {
            sh ' docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
           }
        }
      }
    }
    stage('Deploy to Server') {
            steps {
                script {
                    sh '''
                        docker pull akshay117711/prometheus:${BUILD_NUMBER}
                        docker stop prometheus || true
                        docker rm prometheus || true
                        docker run -d --name prometheus -p 8081:8080 akshay117711/prometheus:${BUILD_NUMBER}
                    '''
                }
          }
      }
  }
}
